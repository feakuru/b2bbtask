services:
  db:
    image: mysql
    container_name: b2bbtask_mysql
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: mymysqlrootpassword
      MYSQL_DATABASE: b2bbtask
      MYSQL_USER: b2bbtast_user
      MYSQL_PASSWORD: b2bbtast_password
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-u", "root", "-pmymysqlrootpassword", "-e", "SELECT 1"]
      timeout: 20s
      retries: 10
  migrations:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: b2bbtask_migrations
    command: poetry run python manage.py migrate --noinput
    environment:
      DB_NAME: b2bbtask
      DB_USER: b2bbtast_user
      DB_PASSWORD: b2bbtast_password
      DB_HOST: b2bbtask_mysql
    depends_on:
      db:
        condition: service_healthy
  collectstatic:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: b2bbtask_collectstatic
    command: poetry run python manage.py collectstatic --noinput
    environment:
      DB_NAME: b2bbtask
      DB_USER: b2bbtast_user
      DB_PASSWORD: b2bbtast_password
      DB_HOST: b2bbtask_mysql
    volumes:
      - static_files:/b2bbtask/static
    depends_on:
      db:
        condition: service_healthy
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: b2bbtask
    command: poetry run python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DB_NAME: b2bbtask
      DB_USER: b2bbtast_user
      DB_PASSWORD: b2bbtast_password
      DB_HOST: b2bbtask_mysql
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      collectstatic:
        condition: service_completed_successfully
  nginx:
    build: ./nginx
    volumes:
      - static_files:/b2bbtask/static
    ports:
      - 1337:80
    depends_on:
      - backend
volumes:
  db_data:
  static_files:
